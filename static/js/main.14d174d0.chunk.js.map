{"version":3,"sources":["components/Layout/Base/Header/Header.js","components/Layout/Base/Nav/Nav.js","components/Layout/Base/Base.js","components/Layout/Base/Container/Container.js","components/Layout/Base/Container/Row/Row.js","components/Layout/Base/Container/Row/Column/Column.js","components/Layout/Base/Container/Row/Column/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","class","rightWrong","Nav","cardsHit","score","topScore","level","Base","children","Container","fluid","Row","Column","size","split","map","join","Card","value","id","onClick","handleClick","alt","src","image","drawRandomCard","deck","randomIndex","Math","floor","random","length","splice","x3","x4","newCards","k","cards","cardsRaised","cardsReset","shuffleCards","array","i","j","App","state","currentScore","clicked","handleRemains","newRemainCards","setState","levelSet","handleShuffle","shuffledCards","handleIncrement","newScore","setTimeout","window","location","reload","handleReset","indexOf","concat","this","card","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14d174d0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = (props) => (\n    <header className=\"fixed-top p-2 px-5 border-bottom border-warning d-flex justify-content-between\">\n        <a href=\"index.html\" className=\"h1\">Clicky Cards</a>\n        <h3 class=\"text-info mb-0 mt-2\">{props.rightWrong}</h3>\n    </header> \n);\n\nexport default Header;","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = (props) => (\n\n    <nav className=\"nav nav-pills nav-justified p-3 mb-5 topNav\">\n        <div className=\"nav-item nav-link ls-md\">CARDS TO CLICK <span className=\"font-monospace\">{props.cardsHit}</span></div>\n        <div className=\"nav-item nav-link ls-md\">CURRENT SCORE <span className=\"font-monospace\">{props.score}</span></div>\n        <div className=\"nav-item nav-link d-none d-sm-none d-md-block ls-md\">TOP SCORE <span className=\"font-monospace\">{props.topScore}</span></div>\n        <div className=\"nav-item nav-link d-none d-sm-block ls-md\">LEVEL <span className=\"font-monospace\">{props.level}</span></div>\n    </nav>\n);\n\nexport default Nav;","import React from \"react\";\nimport \"./Base.css\";\n\nconst Base = props => <div className=\"base\">{props.children}</div>;\n\nexport default Base;","import React from \"react\";\n\nconst Container = props =>\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Container;","import React from \"react\";\n\nconst Row = (props) =>\n  <div className={\"row\"}>\n    {props.children}\n  </div>;\n\nexport default Row;","import React from \"react\";\n\nconst Column = props => {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Column;","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => (\n  <div \n    className=\"card\" \n    value={props.id} \n    onClick={() => props.handleClick(props.id)}\n  >\n    <div className=\"img-container\">\n      <img alt={props.id} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport cards from \"./cards.json\";\n\nimport Header from \"./components/Layout/Base/Header/Header\";\nimport Nav from \"./components/Layout/Base/Nav/Nav\";\nimport Base from \"./components/Layout/Base/Base\";\nimport Container from \"./components/Layout/Base/Container/Container\";\nimport Row from \"./components/Layout/Base/Container/Row/Row\";\nimport Column from \"./components/Layout/Base/Container/Row/Column/Column\";\nimport Card from \"./components/Layout/Base/Container/Row/Column/Card/Card\";\n\n// random selection out of 60 cards and splice them\nconst drawRandomCard = (deck) => {\n  const randomIndex = Math.floor(Math.random() * deck.length);\n  return deck.splice(randomIndex, 1)[0];\n};\n\n//x3 = Array getting cards from cards.json\nlet x3 = [];\n\n//x4 = cards need to show on the page\nlet x4 = 6;\n\n// let's get first 6 cards out of the dack\nlet newCards = () => {\n  for (let k = 0; k < x4; k++) {\n    x3[k] = drawRandomCard(cards);\n  }\n};\n\n// card raised by 2 to the next level\nlet cardsRaised = () => {\n  x4 += 2;\n  newCards();\n};\n\n// once game over, cards needs to reset\nlet cardsReset = () => {\n  x3 = [];\n  x4 = 6;\n  newCards();\n};\n\n//code for shuffle cards\nlet shuffleCards = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nnewCards();\n\nclass App extends Component {\n  state = {\n    x3,\n    x4,\n    cardsHit: x4,\n    currentScore: 0,\n    topScore: 0,\n    level: 1,\n    rightWrong: \"\",\n    clicked: [],\n  };\n\n  handleRemains = () => {\n    const newRemainCards = this.state.x4 - 1;\n    this.setState({\n      x4: newRemainCards,\n      cardsHit: newRemainCards,\n    });\n    if (newRemainCards === 0) {\n      const levelSet = this.state.level + 1;\n      if (levelSet <= 4) {\n        cardsRaised();\n        this.setState({\n          x4: x4,\n          cardsHit: x4,\n          level: levelSet,\n        });\n      } else if (levelSet === 5) {\n        cardsRaised();\n        this.setState({\n          x4: x4,\n          cardsHit: x4,\n          level: \"Final\",\n        });\n      }\n    }\n  };\n\n  //shffle cards properly...\n  handleShuffle = () => {\n    let shuffledCards = shuffleCards(x3);\n    this.setState({ x3: shuffledCards });\n  };\n\n  // every right click you need to update scores and display banner\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: \"Try not to hit any duplicates!\",\n    });\n    if (newScore === 1) {\n      this.setState({\n        rightWrong: \"Try not to hit any duplicates!\",\n      });\n    } else if (newScore === 50) {\n      this.setState({\n        rightWrong: \"Congratulations!!! You Just Won!!!\",\n        clicked: [],\n      });\n      // Reload the current page, without using the cache, in 5 seconds\n      setTimeout(function () {\n        window.location.reload(true);\n      }, 5000);\n    } else {\n      this.setState({\n        rightWrong: \"Correct, try next!\",\n      });\n    }\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    this.handleShuffle();\n  };\n\n  //make sure game reset properly\n  handleReset = () => {\n    cardsReset();\n    this.setState({\n      currentScore: 0,\n      level: 1,\n      x4: x4,\n      cardsHit: x4,\n      topScore: this.state.topScore,\n      rightWrong: \"Oh no!!! Try again!\",\n      clicked: [],\n    });\n    this.handleShuffle();\n  };\n\n  //if click is not duplicate then move forward...\n  handleClick = (id) => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.handleRemains();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  render() {\n    return (\n      <Base>\n        <Header rightWrong={this.state.rightWrong} />\n        <Nav cardsHit={this.state.cardsHit} score={this.state.currentScore} topScore={this.state.topScore} level={this.state.level} />\n        <Container>\n          <Row>\n            {this.state.x3.map((card) => (\n              <Column size=\"lg-2 md-3 sm-3 4\">\n                <Card key={card.id} handleClick={this.handleClick} handleIncrement={this.handleIncrement} handleReset={this.handleReset} handleShuffle={this.handleShuffle} id={card.id} image={card.image} />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Base>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}